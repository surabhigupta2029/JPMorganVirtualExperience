From 992e1214438e4f8a4e21947e7ba21f82ca7a2074 Mon Sep 17 00:00:00 2001
From: Surabhi <surabhi2029@gmail.com>
Date: Mon, 21 Dec 2020 18:10:45 -0800
Subject: [PATCH] Create Patch File

---
 __pycache__/client3.cpython-36.pyc | Bin 0 -> 1102 bytes
 client3.py                         |  49 ++++++++++++++++++-----------
 client_test.py                     |  41 ++++++++++++++----------
 3 files changed, 55 insertions(+), 35 deletions(-)
 create mode 100644 __pycache__/client3.cpython-36.pyc

diff --git a/__pycache__/client3.cpython-36.pyc b/__pycache__/client3.cpython-36.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..f9c7f6e7dc876bfd1015ef7ae3a9f79f33938319
GIT binary patch
literal 1102
zcmYjQPj3@P6rb6hU9TNGgy1B#xC~VhwOZq#T%rhCXhJI?HA+ATF``<nJ<stv>s@DN
zj1uFV%z-<fqUty4p&wvxRZrYGaq63KK+Nd<n|b@@z2AGg(`eNGI{r6)UnAr{^3{q^
ze~6_2K_-c$84=V;Pk2uH!grDhCOr{IUxbp$;4Kjq8OjRE2&ytV_0-?z@1O?Zf*z1R
z=3)i>Q61>0F<OOSbPd>uEy#i{=xEJKaXlqs{d^a$qxZJB0TsBhps$!{iVd+TwqOg^
zp?ROcH?j&%*nmyg8n8|Ll9IFY7xugc5v<FV7C~Nbk%f14`{V`I@r<+^AFw8JIJ-48
zX0q4qW<@{AhJ`kJyW6|l-LomEi=R{Z;LT<FkrL8Jaw|a2koJ-ELu7M|*CLnHSj}q@
z>Emnk(sMTZV*7J%?r#wp+$5K5POUX(1BRJ|vps&K3OVfqPqK^`18#=Ea{vjFzfQ6#
zXl@FA0y(I}pc9vgNhU>_8(s$56#dh(Vv0%JOJx~MRN9B7o#@jK9;Vo)WiZH!#I%Dl
zIGYv*lszu1_(8n%ucGf#Rkpf6iCRJNsnZ=6W9aIsN_xYz`{d~N{f>eDuw&4_bFVYG
z*y;AO6mqk3cXCnIPrw{tZbvq^TNps&ND<;kbPac%ss>tp`?g(HT5?b}QJGUoaa8Kk
zdxl`n=}m(0__J^MZ(ul<o)#7ymvEf$B$rouk1N}rLzi>g6O}8M&q~i-ELj~L%Lwy)
zYUBNYmJX2-7Ewmks=JNjagye7JiBvj!IJ#8=856oBV2p8^^Y8DchWtBT6-3`Xy{k^
zkAB%N{e#E9wp(I#s<JHY-Bp0&q>TudcF9aS2Ej(U$VI5Ij$$l=<L8f`zAWjX!{|#Q
zc`}ALE(7#Bfs&$zeUw^MKF6$J%wht084e0HPE5%ZB(e-$o3#jCj#}AY*)?5Nt!CTe
x8tvvKH(vo{`>vKK-5=vrX7JMn9_jCpMbvGd;f`v!{Z(3{n~Wh}!#hTs{{K?`6hr_3

literal 0
HcmV?d00001

diff --git a/client3.py b/client3.py
index f1771c3..9079a91 100644
--- a/client3.py
+++ b/client3.py
@@ -29,31 +29,42 @@ QUERY = "http://localhost:8080/query?id={}"
 # 500 server request
 N = 500
 
+
 def getDataPoint(quote):
-	""" Produce all of the needed values to generate a datapoint """
-	""" ------------- Update this function ------------- """
-	stock = quote['stock']
-	bid_price = float(quote['top_bid']['price'])
-	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
-	return stock, bid_price, ask_price, price
+    """ Produce all of the needed values to generate a datapoint """
+    """ ------------- Update this function ------------- """
+    stock = quote['stock']
+    bid_price = float(quote['top_bid']['price'])
+    ask_price = float(quote['top_ask']['price'])
+    price = (bid_price+ask_price)/2
+    return stock, bid_price, ask_price, price
+
 
 def getRatio(price_a, price_b):
-	""" Get ratio of price_a and price_b """
-	""" ------------- Update this function ------------- """
-	""" Also create some unit tests for this function in client_test.py """
-	return 1
+    """ Get ratio of price_a and price_b """
+    """ ------------- Update this function ------------- """
+    """ Also create some unit tests for this function in client_test.py """
+    if(price_b == 0):
+        return
+    return price_a/price_b
+
 
 # Main
 if __name__ == "__main__":
 
-	# Query the price once every N seconds.
-	for _ in iter(range(N)):
-		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+    # Query the price once every N seconds.
+    for _ in (range(N)):
+        quotes = json.loads(urllib.request.urlopen(
+            QUERY.format(random.random())).read())
 
-		""" ----------- Update to get the ratio --------------- """
-		for quote in quotes:
-			stock, bid_price, ask_price, price = getDataPoint(quote)
-			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+        """ ----------- Update to get the ratio --------------- """
+        # Creating a dictionary to store the key,value as stock,price
+        prices = {}
+        for quote in quotes:
+            stock, bid_price, ask_price, price = getDataPoint(quote)
+            prices[stock] = price
+            print("Quoted %s at (bid:%s, ask:%s, price:%s)" %
+                  (stock, bid_price, ask_price, price))
 
-		print ("Ratio %s" % getRatio(price, price))
+            # Passing in the correct prices for companies ABC and DEF
+        print("Ratio %s" % getRatio(prices['ABC'], prices['DEF']))
diff --git a/client_test.py b/client_test.py
index af2bf26..2ae1db8 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,24 +1,33 @@
 import unittest
-from client3 import getDataPoint
+from client3 import getDataPoint, getRatio
 
-class ClientTest(unittest.TestCase):
-  def test_getDataPoint_calculatePrice(self):
-    quotes = [
-      {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
-      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
-    ]
-    """ ------------ Add the assertion below ------------ """
-
-  def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
-    quotes = [
-      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
-      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
-    ]
-    """ ------------ Add the assertion below ------------ """
 
+class ClientTest(unittest.TestCase):
+    def test_getDataPoint_calculatePrice(self):
+        quotes = [
+            {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453',
+                'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+            {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+        ]
+        """ ------------ Add the assertion below ------------ """
+        for quote in quotes:
+            self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (
+                quote['top_bid']['price'] + quote['top_ask']['price'])/2))
 
-  """ ------------ Add more unit tests ------------ """
+    def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
+        quotes = [
+            {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453',
+                'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+            {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+        ]
+        """ ------------ Add the assertion below ------------ """
+        for quote in quotes:
+            self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (
+                quote['top_bid']['price'] + quote['top_ask']['price'])/2))
 
+    """ ------------ Add more unit tests ------------ """
 
 
 if __name__ == '__main__':
-- 
2.17.1

